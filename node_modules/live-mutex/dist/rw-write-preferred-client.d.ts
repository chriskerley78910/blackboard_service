import { Client, ClientOpts, LMClientCallBack } from "./client";
export declare const log: {
    info: any;
    warn: any;
    error: any;
    debug: (...args: any[]) => void;
};
export declare class RWLockWritePrefClient extends Client {
    constructor(o?: Partial<ClientOpts>, cb?: LMClientCallBack);
    beginReadp(key: string, opts: any): Promise<any>;
    endReadp(key: string, opts: any): Promise<any>;
    beginWritep(key: string, opts?: any): Promise<any>;
    endWritep(key: string, opts?: any): Promise<any>;
    acquireWriteLockp(key: string, opts?: any): Promise<any>;
    acquireReadLockp(key: string, opts?: any): Promise<any>;
    releaseWriteLockp(key: string, opts?: any): Promise<any>;
    releaseReadLockp(key: string, opts?: any): Promise<any>;
    acquireWriteLock(key: string, opts: any, cb?: any): void;
    releaseWriteLock(key: string, opts: any, cb: any): void;
    acquireReadLock(key: string, opts: any, cb: any): void;
    releaseReadLock(key: string, opts: any, cb: any): void;
    registerWriteFlagCheck(key: string, opts: any, cb: any): void;
    registerWriteFlagAndReadersCheck(key: string, opts: any, cb: any): void;
    incrementReaders(key: any, cb: any): void;
    decrementReaders(key: string, cb: any): void;
    setWriteFlagToFalse(key: string, cb: any): void;
}
